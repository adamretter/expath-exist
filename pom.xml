<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>org.expath</groupId>
		<artifactId>expath</artifactId>
		<version>0.1-SNAPSHOT</version>
	</parent>

	<groupId>org.expath.exist</groupId>
	<artifactId>expath-exist</artifactId>
	<packaging>pom</packaging>
	<version>1.0-SNAPSHOT</version>
	<name>eXist wrappers for EXPath modules</name>
	<url>http://expath.org</url>

	<dependencies>
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>1.2.16</version>
		</dependency>
		<dependency>
			<groupId>commons-pool</groupId>
			<artifactId>commons-pool</artifactId>
			<version>1.5.6</version>
		</dependency>
		<dependency>
			<groupId>org.codehaus.fabric3.fabric3-db-exist</groupId>
			<artifactId>xmldb</artifactId>
			<version>1.0</version>
		</dependency>
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>2.1</version>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.8.1</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.exist-db</groupId>
			<artifactId>exist-modules</artifactId>
			<version>2.0-tech-preview</version>
		</dependency>
		<dependency>
			<groupId>org.exist-db</groupId>
			<artifactId>exist</artifactId>
			<version>2.0-tech-preview</version>
		</dependency>
	</dependencies>

	<properties>
		<jar-name>${project.artifactId}-lib.jar</jar-name>
	</properties>

	<build>
		<plugins>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>xml-maven-plugin</artifactId>
				<version>1.0</version>
				<executions>
					<execution>
						<id>generate-lib-package</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>transform</goal>
						</goals>
						<configuration>
							<forceCreation>true</forceCreation>
							<transformationSets>
								<transformationSet>
									<dir>../../expath-specs/${expath-spec-id}</dir>
									<includes>
										<include>${expath-spec-id}.xml</include>
									</includes>
									<stylesheet>../utils/generate-xar/generate-xar-package.xsl</stylesheet>
									<parameters>
										<parameter>
											<name>cxan.org-id</name>
											<value>cteodorescu</value>
										</parameter>
										<parameter>
											<name>module-prefix</name>
											<value>${module-prefix}</value>
										</parameter>
										<parameter>
											<name>module-namespace</name>
											<value>${module-namespace}</value>
										</parameter>
										<parameter>
											<name>package-version</name>
											<value>${project.version}</value>
										</parameter>
										<parameter>
											<name>target-dir</name>
											<value>target</value>
										</parameter>
										<parameter>
											<name>java-package-main-class</name>
											<value>${java-package-main-class}</value>
										</parameter>
										<parameter>
											<name>jar-name</name>
											<value>${jar-name}</value>
										</parameter>
										<parameter>
											<name>package-type-dependencies</name>
											<value>${package-type-dependencies}</value>
										</parameter>										
									</parameters>
								</transformationSet>
							</transformationSets>
						</configuration>
					</execution>
				</executions>
				<dependencies>
					<dependency>
						<groupId>net.sf.saxon</groupId>
						<artifactId>Saxon-HE</artifactId>
						<version>9.4</version>
					</dependency>
				</dependencies>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<id>copy-dependencies</id>
						<phase>package</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/package-files/${project.artifactId}/</outputDirectory>
							<overWriteReleases>false</overWriteReleases>
							<overWriteSnapshots>false</overWriteSnapshots>
							<overWriteIfNewer>true</overWriteIfNewer>
							<includeArtifactIds>${dependency-list}</includeArtifactIds>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-antrun-plugin</artifactId>
				<version>1.7</version>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>run</goal>
						</goals>
						<configuration>
							<target>
								<echo>Copy ${project.artifactId}-${project.version}.jar...</echo>
								<copy file="${project.build.directory}/${project.build.finalName}.jar" tofile="${project.build.directory}/package-files/${project.artifactId}/${project.artifactId}.jar"
									overwrite="true" />

								<echo>Copy icon...</echo>
								<copy file="${basedir}/src/main/resources/icon.png" tofile="${project.build.directory}/package-files/icon.png" overwrite="true" />

								<echo>Copy XQuery unit tests and resources...</echo>
								<copy file="../utils/generate-xar/test-plan.xq" todir="${project.build.directory}/package-files/tests" overwrite="true" />
								<copy todir="${project.build.directory}/package-files/tests" overwrite="true">
									<fileset dir="${basedir}/src/test/java/org/expath/exist/${java-package-name}" includes="*.*" />
								</copy>
								<copy todir="${project.build.directory}/package-files/tests/unit-tests" overwrite="true">
									<fileset dir="${basedir}/src/test/java/org/expath/exist/${java-package-name}/xquery" />
								</copy>
								<copy todir="${project.build.directory}/package-files/tests/resources" overwrite="true">
									<fileset dir="${basedir}/src/test/resources/org/expath/exist/${java-package-name}/tests/resources" />
								</copy>

								<echo>Making ${project.artifactId}-lib.xar...</echo>
								<zip destfile="${project.build.directory}/${project.artifactId}-${project.version}.xar">
									<fileset dir="${project.build.directory}/package-files">
										<exclude name="tests/" />
									</fileset>
									<fileset dir="${project.build.directory}/library-package-descriptors" />
								</zip>

								<echo>Making ${project.artifactId}-demos.xar...</echo>
								<zip destfile="${project.build.directory}/${project.artifactId}-demos-${project.version}.xar">
									<fileset dir="${project.build.directory}/package-files">
										<exclude name="exist.xml" />
										<exclude name="${project.artifactId}/" />
									</fileset>
									<fileset dir="${project.build.directory}/application-package-descriptors" />
									<zipfileset dir="${basedir}" includes="README.md" fullpath="index.xml" />
								</zip>

								<echo>Deploying files to eXist local folder...</echo>
								<ant antfile="${local-eXist-management-build-file}" target="deploy-module-jars-to-local-eXist-server">
									<property name="source-folder" value="${project.build.directory}/package-files/${project.artifactId}/" />
								</ant>
								<!-- <ant antfile="${local-eXist-management-build-file}" target="deploy-xars-to-local-eXist-server"> -->
								<!-- <property name="source-folder" value="${project.build.directory}/" /> -->
								<!-- </ant> -->

								<echo>Deploying XQuery unit tests and resources to eXist local instance...</echo>
								<ant antfile="${local-eXist-management-build-file}" target="restart-exist-local-server" />
								<ant antfile="${local-eXist-management-build-file}" target="add-collection-to-db">
									<property name="source-folder" value="${project.build.directory}/package-files/tests" />
									<property name="target-collection" value="/apps/expath-${expath-spec-id}/tests" />
								</ant>
							</target>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
</project>